<tool id="quantification" name="Quantification" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="19.01">
    <description>Single cell quantification, a module for single-cell data extraction given a segmentation mask and multi-channel image.</description>
    <macros>
        <import>macros.xml</import>
    </macros>
 
    <expand macro="requirements"/>
    <expand macro="version_cmd"/>

    <command detect_errors="exit_code"><![CDATA[
    ln -s '$image' 'input.ome.tiff';
    ln -s '$primary_mask' 'primary_mask.tiff';
    #if $supp_masks
    ln -s '$supp_masks' 'supp_mask.tiff';
    #end if

    mkdir './tool_out';

    @CMD_BEGIN@

    python \$QUANT_PATH
    --masks
    'primary_mask.tiff'
    #if $supp_masks
    'supp_mask.tiff'
    #end if

    --image 'input.ome.tiff'
    --output './tool_out'

    #if $mask_props
    --mask_props $mask_props
    #end if
    #if $intensity_props
    --intensity_props $intensity_props
    #end if

    --channel_names '$channel_names';

    cp tool_out/*primary_mask.csv primary_mask.csv
    ]]></command>

    <inputs>
        <param name="image" type="data" format="tiff" label="Registered TIFF"/>
        <param name="primary_mask" type="data" format="tiff" label="Primary Cell Mask"/>
        <param name="supp_masks" type="data" optional="true" format="tiff" label="Additional Cell Masks"/>
        <param name="channel_names" type="data" format="csv" label="Marker Channels"/>
        <param name="mask_props" type="text" label="Mask Metrics" help="Space separated list of additional metrics to be calculated for every mask."/>
        <param name="intensity_props" type="text" label="Intensity Metrics" help="Space separated list of additional metrics to be calculated for every marker separately."/>
    </inputs>

    <outputs>
        <data format="csv" name="cellmask" from_work_dir="primary_mask.csv" label="CellMaskQuant"/>
        <collection type="list" name="quantification" label="${tool.name} on ${on_string}">
          <discover_datasets pattern="__designation_and_ext__" format="csv" directory="tool_out/" visible="false"/>
        </collection>
     </outputs>
     <tests>
        <test>
            <param name="image" value="test.tiff" />
            <param name="primary_mask" value="mask.tiff" />
            <param name="channel_names" value="channels.csv" />
            <output name="cellmask" ftype="csv">
                <assert_contents>
                    <has_n_columns n="11" sep="," delta="1" />
                </assert_contents>
            </output>
        </test>
    </tests>
    <help><![CDATA[
# Single cell quantification
Module for single-cell data extraction given a segmentation mask and multi-channel image. The CSV structure is aligned with histoCAT output.

**CommandSingleCellExtraction.py**:

* `--masks` Paths to where masks are stored (Ex: ./segmentation/cellMask.tif) -> If multiple masks are selected the first mask will be used for spatial feature extraction but all will be quantified

* `--image` Path to image(s) for quantification.  (Ex: ./registration/*.h5) -> works with .h(df)5 or .tif(f)

* `--output` Path to output directory. (Ex: ./feature_extraction)

* `--channel_names` csv file containing the channel names for the z-stack (Ex: ./my_channels.csv)

# Run script
`python CommandSingleCellExtraction.py --masks ./segmentation/cellMask.tif ./segmentation/membraneMask.tif --image ./registration/Exemplar_001.h5  --output ./feature_extraction --channel_names ./my_channels.csv`

# Main developer
Denis Schapiro (https://github.com/DenisSch)

Joshua Hess (https://github.com/JoshuaHess12)

Jeremy Muhlich (https://github.com/jmuhlich)
    ]]></help>
    <expand macro="citations" />
</tool>
